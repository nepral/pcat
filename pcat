#!/usr/bin/python3

from sys import argv, exit
from click import command, argument, option, get_terminal_size, version_option, help_option
from pstr import err, pcolor, find, findCo
from pstr import file as file_pstr

@command()
@argument('file')
@option('-e', '--end', help='coustem end line', default='')
@option('-c', '--color', help='print all text from file with color [g=green, y=yellow, ...]', default='no')
@option('-n', '--line', help='select number line for print', default=str('*'))
@option('-g', '--grep', help='grep any word with color')
@option('-gc', '--gcolor', help='select grep color', default='r')

@option('-bs', '--befor_suffix', help='show befor_suffix for number or text', default='')
@option('-fs', '--after_suffix', help='show after_suffix for number or text', default='')

@option("-t", '--type', help="coustem type a text [write, color, background]", default='color')
@option("-s", '--style', help='coustem style a text', default='bold')
@option("-ln", '--show-line', help='show line number or not show space in file [ln=show_line, ns=not_space]', is_flag=True, default=False)

@option("-hs", "--hide-space", help="Hide any space in output", default=True, is_flag=True)
@option("-lc", '--line-color', help='select line color', default='y')

@option("-ef", "--effect", help="this option for write text in termainal write animate.", is_flag=True, default=False)
@option("-et", "--effect-time", help="select spead for write.", type=float, default=float(0.02))

@version_option('1.0.3', '-v', '--version', message='pcat: Version 1.0.3')
@help_option('-h', '--help')

def main(color, line, file, after_suffix,
    	grep, gcolor, befor_suffix, type,
    	end, show_line, line_color, effect_time, 
    	style, effect, hide_space):
<<<<<<< HEAD

=======
    
>>>>>>> fcd72b06f44c6e9ae1a701b6ea3c1ea13064cd22
    if argv[1] == 'doc':
        ali = pcolor.example()
        exit(0)

    #print(click.getchar(False))
    y, x = get_terminal_size()
    if y < 50 and x < 10:
        print('Please enlarge the terminal.')
        exit(1)
    try:
        file_pstr(file, 
            line=line, 
            color=color, 
            grep=grep,
            grep_color=gcolor, 
            End=end, 
            color_num=line_color,
            show_num=show_line, 
            suffix=after_suffix, 
            Type=type, 
            Style=style,
            show_space=hide_space,
            before_num=befor_suffix,  #'│',
            ## if Unicode is True not print any thing because I using color from psrt
            Unicode=False,
            effect=[effect, effect_time])
        
    except KeyError as ker:
        print(err(f'Oh no this key <!c>{ker}<!e> or argumant not found ...', message='', color='no'))
    
    except FileNotFoundError as fer:
        print(err(f"{fer}", message='', color='no'))
        # print(pstr.err(f"Oh no this '{argv[1]}' file not found", massing='', color='no'))
if __name__ == "__main__":
    main()


"""
this is pcat tutorial:

pcat <file_path> [options]

Examples:
    1- pcat foo.txt -c g                    # output green color
    2- pcat foo.txt -c g -s bold            # output green color with bold font
    3- pcat foo.txt -c g -t bg/co           # output green background color

    4- pcat foo.txt -g field/"field"        # output grep/find of filed word in file
    5- pcat foo.txt -g field/"field" -gc y  # output grep/find of filed word in file with yellow color default color is red
    
    6- pcat foo.txt -n 10                   # output 10 number of file
    
    7- pcat foo.txt -ln                     # output show line number
    8- pcat foo.txt -ln -fs "- "            # output show line number with suffix "-": like this (1- <text>)
    9- pcat foo.txt -ln -fs "- " -bs "│"    # output show line number with before suffix "│": like this (|1- <text>)
   10- pcat foo.txt -ef                     # output write text by slow
   10- pcat foo.txt -et 0.07                # output write text by slow with float time default time is 0.03
"""
